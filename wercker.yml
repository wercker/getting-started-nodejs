box:
  id: node:latest
  ports:
    - "8080"
dev:
  steps:
    - npm-install
    - internal/watch:
        code: node app.js
        reload: true

# Build definition
build:
  # The steps that will be executed on build
  steps:
    - script:
        code: export NODE_ENV='testing'
    # A step that executes `npm install` command
    - npm-install
    # A step that executes `npm test` command
    - npm-test

    # A custom script step, name value is used in the UI
    # and the code value contains the command that get executed
    - script:
        name: echo nodejs information
        code: |
          echo "node version $(node -v) running"
          echo "npm version $(npm -v) running"
  after-steps:
    - slack-notifier:
        url: $SLACK_URL
        channel: dev
        username: werckerbot
# push to docker resitry
docker-push:
  steps:
    - internal/docker-push:
        registry: $DOCKER_RESISTRY # https://registry.hub.docker.com/v2 # redirect not supported!!
        repository: $DOCKER_REPOSITORY # tkote/nodejs-demo
        username: $DOCKER_USERNAME
        password: $DOCKER_PASSWORD
        cmd: "/bin/sh /pipeline/source/startup.sh"
        ports: "8080"
  after-steps:
    - slack-notifier:
        url: $SLACK_URL
        channel: dev
        username: werckerbot
# push to docker resitry
docker-scratch-push:
  steps:
    - internal/docker-scratch/push:
        registry: $DOCKER_RESISTRY # https://registry.hub.docker.com/v2 # redirect not supported!!
        repository: $DOCKER_REPOSITORY # tkote/nodejs-demo
        username: $DOCKER_USERNAME
        password: $DOCKER_PASSWORD
        cmd: "node app.js"
        ports: "8080"
  after-steps:
    - slack-notifier:
        url: $SLACK_URL
        channel: dev
        username: werckerbot
# deploy to k8s custer
deploy:
    steps:
      - wercker/kubectl:
          debug: true
          server: $KUBERNETES_MASTER
          token: $KUBERNETES_TOKEN
          insecure-skip-tls-verify: true
          command: delete deployment nodejs-demo -n demo --ignore-not-found
      - wercker/kubectl:
          debug: true
          server: $KUBERNETES_MASTER
          token: $KUBERNETES_TOKEN
          insecure-skip-tls-verify: true
          command: apply -f $KUBERNETES_DEPLOYMENT
    after-steps:
      - slack-notifier:
          url: $SLACK_URL
          channel: dev
          username: werckerbot
